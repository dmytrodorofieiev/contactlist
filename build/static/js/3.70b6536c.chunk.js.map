{"version":3,"sources":["styles/phonebook.module.css","components/section.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/contactList.js","components/contactForm.js","components/filter.js","views/contactsView.js"],"names":["module","exports","Section","title","children","className","styles","alphabet","previousSeed","shuffled","randomFromSeed","require","ORIGINAL","reset","setCharacters","_alphabet_","length","Error","unique","split","filter","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","build","isValid","clusterWorkerId","generate","seedValue","worker","workerId","newCharacters","undefined","_seed_","counter","previousSeconds","str","seconds","Date","now","random","format","number","done","loopCounter","pow","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","mask","log","LN2","step","id","RegExp","replace","test","getContactsSelector","state","contacts","data","getFilter","connect","dispatch","deleteContact","filterContacts","name","toLowerCase","includes","map","onClick","shortid","addContact","contact","useDispatch","useEffect","getContacts","action","onSubmit","e","preventDefault","target","value","alert","htmlFor","placeholder","type","setFilter","onChange"],"mappings":"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","file":"static/js/3.70b6536c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"phonebookHeader\":\"phonebook_phonebookHeader__2-EtE\",\"phonebookButton\":\"phonebook_phonebookButton__18YqY\",\"phonebookInput\":\"phonebook_phonebookInput__1kRqC\",\"phonebookForm\":\"phonebook_phonebookForm__26W1h\",\"phonebookInputWrap\":\"phonebook_phonebookInputWrap__1Ab94\",\"phonebookLabel\":\"phonebook_phonebookLabel__119Yq\",\"phonebookFilter\":\"phonebook_phonebookFilter__3PsM8\",\"phonebookContact\":\"phonebook_phonebookContact__2Gc2l\"};","import * as styles from '../styles/phonebook.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section>\n      <h2 className={styles.phonebookHeader}>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nmodule.exports = 0;\n","export const getContactsSelector = state => {\n  return state.contacts.data;\n};\n","export const getFilter = state => {\n  return state.filter;\n};\n","import Section from './section';\nimport shortid from 'shortid';\nimport { getContactsSelector } from '../redux/contacts/contacts-selectors';\nimport { deleteContact } from '../redux/contacts/contacts-operations';\nimport { getFilter } from '../redux/filter/filter-selectors';\nimport { connect } from 'react-redux';\nimport * as styles from '../styles/phonebook.module.css';\n\nfunction ContactList({ contacts, filter, deleteContact }) {\n  const filterContacts = () => {\n    return contacts.filter(\n      item => item.name && item.name.toLowerCase().includes(filter),\n    );\n  };\n\n  return (\n    <Section title=\"Contacts\">\n      {!!filterContacts().length ? (\n        filterContacts().map(item => (\n          <div className={styles.phonebookContact} key={shortid.generate()}>\n            &#128519; {item.name}\n            <span className=\"break\">&#128241; {item.number}</span>\n            <button onClick={() => deleteContact(item.id)}>delete</button>\n          </div>\n        ))\n      ) : (\n        <div className={styles.phonebookContact}>\n          Contacts not found &#128530;\n          <span className=\"break\"> Please add some</span>\n        </div>\n      )}\n    </Section>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContactsSelector(state),\n    filter: getFilter(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteContact: id => dispatch(deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './section';\nimport { addContact, getContacts } from '../redux/contacts/contacts-operations';\nimport { getContactsSelector } from '../redux/contacts/contacts-selectors';\nimport { connect, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport * as styles from '../styles/phonebook.module.css';\n\nfunction ContactForm({ contacts, addContact }) {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  const handleContact = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n\n    if (contacts.filter(item => item.name === name.value).length > 0) {\n      alert('user already exists');\n      return;\n    }\n    const contact = { name: name.value, number: number.value };\n    addContact(contact);\n  };\n  return (\n    <Section title=\"phonebook\">\n      <form className={styles.phonebookForm} action=\"\" onSubmit={handleContact}>\n        <div className={styles.phonebookInputWrap}>\n          <label className={styles.phonebookLabel} htmlFor=\"name\">\n            Name\n          </label>\n          <input\n            className={styles.phonebookInput}\n            placeholder=\"Artem\"\n            type=\" text\"\n            id=\"name\"\n          />\n        </div>\n        <div className={styles.phonebookInputWrap}>\n          <label className={styles.phonebookLabel} htmlFor=\"number\">\n            Phone Number\n          </label>\n          <input\n            className={styles.phonebookInput}\n            placeholder=\"05084838383\"\n            type=\"text\"\n            id=\"number\"\n          />\n        </div>\n        <button className={styles.phonebookButton} type=\"submit\">\n          add contact\n        </button>\n      </form>\n    </Section>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: getContactsSelector(state),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: contact => dispatch(addContact(contact)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { connect } from 'react-redux';\nimport setFilter from '../redux/filter/filter-actions';\nimport * as styles from '../styles/phonebook.module.css';\n\nfunction Filter({ setFilter }) {\n  const changeFilter = e => {\n    const { value } = e.target;\n    setFilter(value.toLowerCase());\n  };\n\n  return (\n    <div className={styles.phonebookInputWrap}>\n      <label className={styles.phonebookLabel} htmlFor=\" filter\">\n        Filter\n      </label>\n      <input\n        className={styles.phonebookInput}\n        type=\"text\"\n        id=\"filter\"\n        onChange={changeFilter}\n      />\n    </div>\n  );\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilter: value => dispatch(setFilter(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import ContactList from '../components/contactList';\nimport ContactForm from '../components/contactForm';\nimport Filter from '../components/filter';\nimport { connect } from 'react-redux';\n\nfunction ContactsView({ contacts }) {\n\n    return (\n        <>\n            <ContactForm />\n            <Filter />\n            <ContactList />\n        </>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        contacts: state.contacts,\n    };\n};\n\nexport default connect(mapStateToProps)(ContactsView);\n"],"sourceRoot":""}